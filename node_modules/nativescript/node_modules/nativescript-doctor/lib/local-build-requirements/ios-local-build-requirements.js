"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const semver = require("semver");
const constants_1 = require("../constants");
class IosLocalBuildRequirements {
    constructor(sysInfo, hostInfo) {
        this.sysInfo = sysInfo;
        this.hostInfo = hostInfo;
    }
    checkRequirements() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.hostInfo.isDarwin ||
                !(yield this.isXcodeVersionValid()) ||
                !(yield this.sysInfo.getXcodeprojLocation())) {
                return false;
            }
            return true;
        });
    }
    isXcodeVersionValid() {
        return __awaiter(this, void 0, void 0, function* () {
            const xcodeVersion = yield this.sysInfo.getXcodeVersion();
            return !!xcodeVersion && (semver.major(semver.coerce(xcodeVersion)) >= constants_1.Constants.XCODE_MIN_REQUIRED_VERSION);
        });
    }
}
exports.IosLocalBuildRequirements = IosLocalBuildRequirements;
