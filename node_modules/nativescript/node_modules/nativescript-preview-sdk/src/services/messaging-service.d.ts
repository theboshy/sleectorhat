import { Config } from "../models/config";
import { Device } from "../models/device";
import { FilePayload } from "../models/file-payload";
import { FilesPayload } from "../models/files-payload";
export declare class MessagingService {
    private static PubNubInitialized;
    private pubNub;
    private pubNubListenerParams;
    private pubNubSubscribeParams;
    private connectedDevicesTimeouts;
    private config;
    private helpersService;
    private devicesService;
    private previewAppVersionsService;
    private appContentManager;
    private minSupportedVersions;
    constructor();
    initialize(config: Config): Promise<string>;
    stop(): void;
    applyChanges(instanceId: string, filesPayload: FilesPayload, done: (err: Error) => void): void;
    private ensureValidConfig;
    sendInitialFiles(instanceId: string, hmrMode?: number): void;
    getConnectedDevices(instanceId: string): Promise<Device[]>;
    exceedsMaximumTreeSize(additionalFiles?: FilePayload[]): Promise<boolean>;
    private sendFilesInChunks;
    private getFinalFilesPayload;
    private getPublishPromise;
    private getPubNubMetaData;
    private getChunks;
    private handleSendInitialFiles;
    private getConnectedDevicesDelayed;
    private showPage;
    private getDevicesChannel;
    private getBrowserChannel;
}
