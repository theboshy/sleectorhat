"use strict";
const childProcess = require("./child-process");
function stringify(arr, delimiter) {
    delimiter = delimiter || ", ";
    return arr.join(delimiter);
}
exports.stringify = stringify;
function getCurrentEpochTime() {
    let dateTime = new Date();
    return dateTime.getTime();
}
exports.getCurrentEpochTime = getCurrentEpochTime;
function sleep(seconds) {
    childProcess.execSync(`sleep ${seconds}`);
}
exports.sleep = sleep;
function deferPromise() {
    let resolve;
    let reject;
    let isResolved = false;
    let isRejected = false;
    let promise;
    let result;
    promise = new Promise((innerResolve, innerReject) => {
        resolve = (value) => {
            isResolved = true;
            result = value;
            return innerResolve(value);
        };
        reject = (reason) => {
            isRejected = true;
            return innerReject(reason);
        };
    });
    return {
        promise,
        resolve,
        reject,
        isResolved: () => isResolved,
        isRejected: () => isRejected,
        isPending: () => !isResolved && !isRejected,
        getResult: () => result
    };
}
exports.deferPromise = deferPromise;
//# sourceMappingURL=utils.js.map